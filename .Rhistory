linkEnding = ifelse(num < sumN, lead(linkStart), linkStart+bandsize),
colorBin = 'color=',
color = case_when(#Metabalome
R2m <= 0.2 & dataType == 'Metabalome' ~ 'vvlgreen',
R2m > 0.2 & R2m <= 0.3 & dataType == 'Metabalome' ~ 'vlgreen',
R2m > 0.3 & R2m <= 0.4 & dataType == 'Metabalome' ~ 'lgreen',
R2m > 0.4 & R2m <= 0.5 & dataType == 'Metabalome' ~ 'green',
R2m > 0.5 & R2m <= 0.6 & dataType == 'Metabalome' ~ 'dgreen',
R2m > 0.6 & R2m <= 0.7 & dataType == 'Metabalome' ~ 'vdgreen',
R2m > 0.7 & R2m <= 0.8 & dataType == 'Metabalome' ~ 'vvdgreen',
#Proteome colors
R2m <= 0.12 & dataType == 'Proteome' ~ 'vvlred',
R2m > 0.12 & R2m <= 0.15 &  dataType == 'Proteome' ~ 'vlred',
R2m > 0.15 & R2m <= 0.18 & dataType == 'Proteome' ~ 'lred',
R2m > 0.18 & R2m <= 0.21 & dataType == 'Proteome' ~ 'red',
R2m > 0.21 & R2m <= 0.24 & dataType == 'Proteome' ~ 'dred',
R2m > 0.24 & R2m <= 0.27 & dataType == 'Proteome' ~ 'vdred',
R2m > 0.27 & R2m <= 0.30 & dataType == 'Proteome' ~ 'vvdred',
#Genotype colors
R2m <= 0.15 & dataType == 'Genotype' ~ 'vvlblue',
R2m > 0.15 & R2m <= 0.18 & dataType == 'Genotype' ~ 'vlblue',
R2m > 0.18 & R2m <= 0.21 & dataType == 'Genotype' ~ 'lblue',
R2m > 0.21 & R2m <= 0.24 & dataType == 'Genotype' ~ 'blue',
R2m > 0.24 & R2m <= 0.27 & dataType == 'Genotype' ~ 'dblue',
R2m > 0.27 & R2m <= 0.30 & dataType == 'Genotype' ~ 'vdblue',
R2m > 0.30 & R2m <= 0.35 & dataType == 'Genotype' ~ 'vvdblue'
))%>%
ungroup()%>%
unite(color, c('colorBin', 'color'), sep = '')%>%
rownames_to_column(var = 'linkID')%>%
unite(column, c(linkID, name, linkStart, linkEnding, color), sep = ' ')%>%
select(column)
linkJoiner <- variableLinks%>%
bind_rows(responseLinks)%>%
as.matrix()
write_lines(linkJoiner, '~/Documents/GitHub/yuHCT/data/plots/circos/circoslinks.txt')
# CircosPlot -- text labels -----------------------------------------------
text <- circosBands%>%
separate(column, c('chr', 'name', 'network', 'network2', 'start', 'end', 'color'), sep = ' ')%>%
select(name, start, end, network, color)%>%
mutate(color = 'color=vvdgrey')%>%
unite(column, c(name, start, end, network, color), sep = ' ')%>%
as.matrix()
write_lines(text, '~/Documents/GitHub/yuHCT/data/plots/circos/text.txt')
circosBands
clusters
# Circos Plot -- Tiles ----------------------------------------------------
circosTiles <- circosBands%>%
separate(column, c('chr', 'name', 'network', 'network2', 'start', 'end', 'color'), sep = ' ')%>%
left_join(clusters, by = c('network'='feature'))
circosTiles
# Circos Plot -- Tiles ----------------------------------------------------
circosTiles <- circosBands%>%
separate(column, c('chr', 'name', 'network', 'network2', 'start', 'end', 'color'), sep = ' ')%>%
left_join(clusters, by = c('network'='feature'))%>%
mutate(colorVal = 'color=',
color = case_when(color=='vlgrey'~ 'lgrey',
color=='vlgreen'~ 'lgreen',
color=='vlred'~ 'lred',
color=='vlblue'~ 'lblue',
cluster == 1 ~ 'vvlgreen',
cluster == 2 ~ 'vvlpurple',
cluster == 3 ~ 'vvlyellow',
cluster == 4 ~ 'lgreen',
cluster == 5 ~ 'lpurple',
cluster == 6 ~ 'lyellow',
cluster == 7 ~ 'dgreen',
cluster == 8 ~ 'dpurple',
cluster == 9 ~ 'dyellow',
cluster == 10 ~ 'vvdgreen',
cluster == 11 ~ 'vvdpurple',
cluster == 12 ~ 'vvdyellow'))%>%
select(name, start, end, color)%>%
unite(color, c(colorVal, color), sep = '')%>%
unite(column, c(name, start, end, color), sep = ' ')%>%
as.matrix()
# Circos Plot -- Tiles ----------------------------------------------------
circosTiles <- circosBands%>%
separate(column, c('chr', 'name', 'network', 'network2', 'start', 'end', 'color'), sep = ' ')%>%
left_join(clusters, by = c('network'='feature'))%>%
mutate(colorVal = 'color=',
color = case_when(color=='vlgrey'~ 'lgrey',
color=='vlgreen'~ 'lgreen',
color=='vlred'~ 'lred',
color=='vlblue'~ 'lblue',
cluster == 1 ~ 'vvlgreen',
cluster == 2 ~ 'vvlpurple',
cluster == 3 ~ 'vvlyellow',
cluster == 4 ~ 'lgreen',
cluster == 5 ~ 'lpurple',
cluster == 6 ~ 'lyellow',
cluster == 7 ~ 'dgreen',
cluster == 8 ~ 'dpurple',
cluster == 9 ~ 'dyellow',
cluster == 10 ~ 'vvdgreen',
cluster == 11 ~ 'vvdpurple',
cluster == 12 ~ 'vvdyellow'))%>%
select(name, start, end, color, colorVal)%>%
unite(color, c(colorVal, color), sep = '')%>%
unite(column, c(name, start, end, color), sep = ' ')%>%
as.matrix()
write_lines(circosTiles, '~/Documents/GitHub/yuHCT/data/plots/circos/tiles.txt')
# Circos Plot -- Links ----------------------------------------------------
variableLinks <- circosPrep%>%
ungroup()%>%
select(feature, responseVariable, R2m)%>%
left_join(circosBands%>%
separate(column, c('chr', 'name', 'feature', 'feature2', 'start', 'bandEnd', 'color'), sep = ' ')%>%
select(name, feature, start, bandEnd)%>%
unique(),
by = 'feature')%>%
ungroup()%>%
group_by(feature)%>%
mutate(bandStart = as.numeric(start),
bandEnd = as.numeric(bandEnd),
n = 1,
sumN = sum(n),
num = cumsum(n),
size = ifelse(name == 'Metabalome', 6, 26),
bandsize = floor(size/sumN),
bandsize = ifelse(num == 1 & num != sumN, 0, bandsize),
linkStart = ifelse(num > 1, cumsum(bandsize) + bandStart + 2, bandStart + 2),
linkEnding = ifelse(num < sumN, lead(linkStart), linkStart+bandsize),
colorBin = 'color=',
color = case_when(#Metabalome
R2m <= 0.2 & name == 'Metabalome' ~ 'vvlgreen',
R2m > 0.2 & R2m <= 0.3 & name == 'Metabalome' ~ 'vlgreen',
R2m > 0.3 & R2m <= 0.4 & name == 'Metabalome' ~ 'lgreen',
R2m > 0.4 & R2m <= 0.5 & name == 'Metabalome' ~ 'green',
R2m > 0.5 & R2m <= 0.6 & name == 'Metabalome' ~ 'dgreen',
R2m > 0.6 & R2m <= 0.7 & name == 'Metabalome' ~ 'vdgreen',
R2m > 0.7 & R2m <= 0.8 & name == 'Metabalome' ~ 'vvdgreen',
#Proteome colors
R2m <= 0.12 & name == 'Proteome' ~ 'vvlred',
R2m > 0.12 & R2m <= 0.15 &  name == 'Proteome' ~ 'vlred',
R2m > 0.15 & R2m <= 0.18 & name == 'Proteome' ~ 'lred',
R2m > 0.18 & R2m <= 0.21 & name == 'Proteome' ~ 'red',
R2m > 0.21 & R2m <= 0.24 & name == 'Proteome' ~ 'dred',
R2m > 0.24 & R2m <= 0.27 & name == 'Proteome' ~ 'vdred',
R2m > 0.27 & R2m <= 0.30 & name == 'Proteome' ~ 'vvdred',
#Genotype colors
R2m <= 0.15 & name == 'Genotype' ~ 'vvlblue',
R2m > 0.15 & R2m <= 0.18 & name == 'Genotype' ~ 'vlblue',
R2m > 0.18 & R2m <= 0.21 & name == 'Genotype' ~ 'lblue',
R2m > 0.21 & R2m <= 0.24 & name == 'Genotype' ~ 'blue',
R2m > 0.24 & R2m <= 0.27 & name == 'Genotype' ~ 'dblue',
R2m > 0.27 & R2m <= 0.30 & name == 'Genotype' ~ 'vdblue',
R2m > 0.30 & R2m <= 0.35 & name == 'Genotype' ~ 'vvdblue'
))%>%
ungroup()%>%
unite(color, c('colorBin', 'color'), sep = '')%>%
rownames_to_column(var = 'linkID')%>%
unite(column, c(linkID, name, linkStart, linkEnding, color), sep = ' ')%>%
select(column)
responseLinks <- circosPrep%>%
ungroup()%>%
select(feature, dataType, responseVariable, R2m)%>%
left_join(phenotypeBands%>%
separate(column, c('chr', 'name', 'responseVariable', 'feature2', 'start', 'bandEnd', 'color'), sep = ' ')%>%
select(name, responseVariable, start, bandEnd),
by = 'responseVariable')%>%
ungroup()%>%
group_by(responseVariable)%>%
mutate(bandStart = as.numeric(start),
bandEnd = as.numeric(bandEnd),
n = 1,
sumN = sum(n),
num = cumsum(n),
bandsize = floor(26/sumN),
bandsize = ifelse(num == 1 & num != sumN, 0, bandsize),
linkStart = ifelse(num > 1, cumsum(bandsize) + bandStart + 2, bandStart + 2),
linkEnding = ifelse(num < sumN, lead(linkStart), linkStart+bandsize),
colorBin = 'color=',
color = case_when(#Metabalome
R2m <= 0.2 & dataType == 'Metabalome' ~ 'vvlgreen',
R2m > 0.2 & R2m <= 0.3 & dataType == 'Metabalome' ~ 'vlgreen',
R2m > 0.3 & R2m <= 0.4 & dataType == 'Metabalome' ~ 'lgreen',
R2m > 0.4 & R2m <= 0.5 & dataType == 'Metabalome' ~ 'green',
R2m > 0.5 & R2m <= 0.6 & dataType == 'Metabalome' ~ 'dgreen',
R2m > 0.6 & R2m <= 0.7 & dataType == 'Metabalome' ~ 'vdgreen',
R2m > 0.7 & R2m <= 0.8 & dataType == 'Metabalome' ~ 'vvdgreen',
#Proteome colors
R2m <= 0.12 & dataType == 'Proteome' ~ 'vvlred',
R2m > 0.12 & R2m <= 0.15 &  dataType == 'Proteome' ~ 'vlred',
R2m > 0.15 & R2m <= 0.18 & dataType == 'Proteome' ~ 'lred',
R2m > 0.18 & R2m <= 0.21 & dataType == 'Proteome' ~ 'red',
R2m > 0.21 & R2m <= 0.24 & dataType == 'Proteome' ~ 'dred',
R2m > 0.24 & R2m <= 0.27 & dataType == 'Proteome' ~ 'vdred',
R2m > 0.27 & R2m <= 0.30 & dataType == 'Proteome' ~ 'vvdred',
#Genotype colors
R2m <= 0.15 & dataType == 'Genotype' ~ 'vvlblue',
R2m > 0.15 & R2m <= 0.18 & dataType == 'Genotype' ~ 'vlblue',
R2m > 0.18 & R2m <= 0.21 & dataType == 'Genotype' ~ 'lblue',
R2m > 0.21 & R2m <= 0.24 & dataType == 'Genotype' ~ 'blue',
R2m > 0.24 & R2m <= 0.27 & dataType == 'Genotype' ~ 'dblue',
R2m > 0.27 & R2m <= 0.30 & dataType == 'Genotype' ~ 'vdblue',
R2m > 0.30 & R2m <= 0.35 & dataType == 'Genotype' ~ 'vvdblue'
))%>%
ungroup()%>%
unite(color, c('colorBin', 'color'), sep = '')%>%
rownames_to_column(var = 'linkID')%>%
unite(column, c(linkID, name, linkStart, linkEnding, color), sep = ' ')%>%
select(column)
linkJoiner <- variableLinks%>%
bind_rows(responseLinks)%>%
as.matrix()
write_lines(linkJoiner, '~/Documents/GitHub/yuHCT/data/plots/circos/circoslinks.txt')
# CircosPlot -- text labels -----------------------------------------------
text <- circosBands%>%
separate(column, c('chr', 'name', 'network', 'network2', 'start', 'end', 'color'), sep = ' ')%>%
select(name, start, end, network, color)%>%
mutate(color = 'color=vvdgrey')%>%
unite(column, c(name, start, end, network, color), sep = ' ')%>%
as.matrix()
write_lines(text, '~/Documents/GitHub/yuHCT/data/plots/circos/text.txt')
# Circos Plot -- Tiles ----------------------------------------------------
circosTiles <- circosBands%>%
separate(column, c('chr', 'name', 'network', 'network2', 'start', 'end', 'color'), sep = ' ')%>%
# left_join(clusters, by = c('network'='feature'))%>%
mutate(colorVal = 'color=',
color = case_when(color=='vlgrey'~ 'lgrey',
color=='vlgreen'~ 'lgreen',
color=='vlred'~ 'lred',
color=='vlblue'~ 'lblue'))%>%
select(name, start, end, color, colorVal)%>%
unite(color, c(colorVal, color), sep = '')%>%
unite(column, c(name, start, end, color), sep = ' ')%>%
as.matrix()
write_lines(circosTiles, '~/Documents/GitHub/yuHCT/data/plots/circos/tiles.txt')
circosBands
clusterText <- circosBands%>%
separate(column, c('chr', 'name', 'feature', 'network2', 'start', 'end', 'color'), sep = ' ')%>%
left_join(clusters, by = 'feature')%>%
select(name, start, end, feature, cluster, color)%>%
mutate(color = 'color=vvdgrey')%>%
unite(column, c(name, start, end, cluster, color), sep = ' ')%>%
as.matrix()
clusterText
clusterText <- circosBands%>%
separate(column, c('chr', 'name', 'feature', 'network2', 'start', 'end', 'color'), sep = ' ')%>%
left_join(clusters, by = 'feature')%>%
select(name, start, end, cluster, color)%>%
mutate(color = 'color=vvdgrey')%>%
unite(column, c(name, start, end, cluster, color), sep = ' ')%>%
as.matrix()
clusterText
write_lines(text, '~/Documents/GitHub/yuHCT/data/plots/circos/clusterText.txt')
write_lines(clusterText, '~/Documents/GitHub/yuHCT/data/plots/circos/clusterText.txt')
clusters
# Creating the badnds
circosBands <- circosPrep%>%
mutate(chr = 'band')%>%
ungroup()%>%
select(chr, dataType, feature, zero, end)%>%
unique()%>%
group_by(dataType)%>%
left_join(clusters, by = 'feature')%>%
arrange(cluster)%>%
mutate(bandEnd = cumsum(end),
num = 1,
num = cumsum(num),
start = ifelse(num>1, lag(bandEnd), 0),
color = case_when(dataType == 'Phenotype' ~ 'vlgrey',
dataType == 'Metabalome' ~ 'vlgreen',
dataType == 'Genotype' ~ 'vlblue',
dataType == 'Proteome' ~ 'vlred'),
bandEnd = format(as.numeric(bandEnd), scientific = FALSE, trim = TRUE),
start = format(as.numeric(start), scientific = FALSE, trim = TRUE))%>%
mutate(feature2 = feature)%>%
select(-c(zero, num, end, order))%>%
unite(column, c('chr', 'dataType', 'feature', 'feature2', 'start', 'bandEnd', 'color'), sep = ' ')%>%
bind_rows(phenotypeBands)
# Creating the badnds
circosBands <- circosPrep%>%
mutate(chr = 'band')%>%
ungroup()%>%
select(chr, dataType, feature, zero, end)%>%
unique()%>%
group_by(dataType)%>%
left_join(clusters, by = 'feature')%>%
arrange(cluster)%>%
mutate(bandEnd = cumsum(end),
num = 1,
num = cumsum(num),
start = ifelse(num>1, lag(bandEnd), 0),
color = case_when(dataType == 'Phenotype' ~ 'vlgrey',
dataType == 'Metabalome' ~ 'vlgreen',
dataType == 'Genotype' ~ 'vlblue',
dataType == 'Proteome' ~ 'vlred'),
bandEnd = format(as.numeric(bandEnd), scientific = FALSE, trim = TRUE),
start = format(as.numeric(start), scientific = FALSE, trim = TRUE))%>%
mutate(feature2 = feature)%>%
select(-c(zero, num, end, cluster))%>%
unite(column, c('chr', 'dataType', 'feature', 'feature2', 'start', 'bandEnd', 'color'), sep = ' ')%>%
bind_rows(phenotypeBands)
#Combining into a single csv to write as txt
circosBinaryPrint <- circosChromosome%>%
bind_rows(circosBands)%>%
# select(-c(responseVariable, lmerR2)))%>%
as.matrix()
write_lines(circosBinaryPrint, '~/Documents/GitHub/yuHCT/data/plots/circos/circos.txt')
# Circos Plot -- Tiles ----------------------------------------------------
circosTiles <- circosBands%>%
separate(column, c('chr', 'name', 'network', 'network2', 'start', 'end', 'color'), sep = ' ')%>%
# left_join(clusters, by = c('network'='feature'))%>%
mutate(colorVal = 'color=',
color = case_when(color=='vlgrey'~ 'lgrey',
color=='vlgreen'~ 'lgreen',
color=='vlred'~ 'lred',
color=='vlblue'~ 'lblue'))%>%
select(name, start, end, color, colorVal)%>%
unite(color, c(colorVal, color), sep = '')%>%
unite(column, c(name, start, end, color), sep = ' ')%>%
as.matrix()
write_lines(circosTiles, '~/Documents/GitHub/yuHCT/data/plots/circos/tiles.txt')
# Circos Plot -- Links ----------------------------------------------------
variableLinks <- circosPrep%>%
ungroup()%>%
select(feature, responseVariable, R2m)%>%
left_join(circosBands%>%
separate(column, c('chr', 'name', 'feature', 'feature2', 'start', 'bandEnd', 'color'), sep = ' ')%>%
select(name, feature, start, bandEnd)%>%
unique(),
by = 'feature')%>%
ungroup()%>%
group_by(feature)%>%
mutate(bandStart = as.numeric(start),
bandEnd = as.numeric(bandEnd),
n = 1,
sumN = sum(n),
num = cumsum(n),
size = ifelse(name == 'Metabalome', 6, 26),
bandsize = floor(size/sumN),
bandsize = ifelse(num == 1 & num != sumN, 0, bandsize),
linkStart = ifelse(num > 1, cumsum(bandsize) + bandStart + 2, bandStart + 2),
linkEnding = ifelse(num < sumN, lead(linkStart), linkStart+bandsize),
colorBin = 'color=',
color = case_when(#Metabalome
R2m <= 0.2 & name == 'Metabalome' ~ 'vvlgreen',
R2m > 0.2 & R2m <= 0.3 & name == 'Metabalome' ~ 'vlgreen',
R2m > 0.3 & R2m <= 0.4 & name == 'Metabalome' ~ 'lgreen',
R2m > 0.4 & R2m <= 0.5 & name == 'Metabalome' ~ 'green',
R2m > 0.5 & R2m <= 0.6 & name == 'Metabalome' ~ 'dgreen',
R2m > 0.6 & R2m <= 0.7 & name == 'Metabalome' ~ 'vdgreen',
R2m > 0.7 & R2m <= 0.8 & name == 'Metabalome' ~ 'vvdgreen',
#Proteome colors
R2m <= 0.12 & name == 'Proteome' ~ 'vvlred',
R2m > 0.12 & R2m <= 0.15 &  name == 'Proteome' ~ 'vlred',
R2m > 0.15 & R2m <= 0.18 & name == 'Proteome' ~ 'lred',
R2m > 0.18 & R2m <= 0.21 & name == 'Proteome' ~ 'red',
R2m > 0.21 & R2m <= 0.24 & name == 'Proteome' ~ 'dred',
R2m > 0.24 & R2m <= 0.27 & name == 'Proteome' ~ 'vdred',
R2m > 0.27 & R2m <= 0.30 & name == 'Proteome' ~ 'vvdred',
#Genotype colors
R2m <= 0.15 & name == 'Genotype' ~ 'vvlblue',
R2m > 0.15 & R2m <= 0.18 & name == 'Genotype' ~ 'vlblue',
R2m > 0.18 & R2m <= 0.21 & name == 'Genotype' ~ 'lblue',
R2m > 0.21 & R2m <= 0.24 & name == 'Genotype' ~ 'blue',
R2m > 0.24 & R2m <= 0.27 & name == 'Genotype' ~ 'dblue',
R2m > 0.27 & R2m <= 0.30 & name == 'Genotype' ~ 'vdblue',
R2m > 0.30 & R2m <= 0.35 & name == 'Genotype' ~ 'vvdblue'
))%>%
ungroup()%>%
unite(color, c('colorBin', 'color'), sep = '')%>%
rownames_to_column(var = 'linkID')%>%
unite(column, c(linkID, name, linkStart, linkEnding, color), sep = ' ')%>%
select(column)
responseLinks <- circosPrep%>%
ungroup()%>%
select(feature, dataType, responseVariable, R2m)%>%
left_join(phenotypeBands%>%
separate(column, c('chr', 'name', 'responseVariable', 'feature2', 'start', 'bandEnd', 'color'), sep = ' ')%>%
select(name, responseVariable, start, bandEnd),
by = 'responseVariable')%>%
ungroup()%>%
group_by(responseVariable)%>%
mutate(bandStart = as.numeric(start),
bandEnd = as.numeric(bandEnd),
n = 1,
sumN = sum(n),
num = cumsum(n),
bandsize = floor(26/sumN),
bandsize = ifelse(num == 1 & num != sumN, 0, bandsize),
linkStart = ifelse(num > 1, cumsum(bandsize) + bandStart + 2, bandStart + 2),
linkEnding = ifelse(num < sumN, lead(linkStart), linkStart+bandsize),
colorBin = 'color=',
color = case_when(#Metabalome
R2m <= 0.2 & dataType == 'Metabalome' ~ 'vvlgreen',
R2m > 0.2 & R2m <= 0.3 & dataType == 'Metabalome' ~ 'vlgreen',
R2m > 0.3 & R2m <= 0.4 & dataType == 'Metabalome' ~ 'lgreen',
R2m > 0.4 & R2m <= 0.5 & dataType == 'Metabalome' ~ 'green',
R2m > 0.5 & R2m <= 0.6 & dataType == 'Metabalome' ~ 'dgreen',
R2m > 0.6 & R2m <= 0.7 & dataType == 'Metabalome' ~ 'vdgreen',
R2m > 0.7 & R2m <= 0.8 & dataType == 'Metabalome' ~ 'vvdgreen',
#Proteome colors
R2m <= 0.12 & dataType == 'Proteome' ~ 'vvlred',
R2m > 0.12 & R2m <= 0.15 &  dataType == 'Proteome' ~ 'vlred',
R2m > 0.15 & R2m <= 0.18 & dataType == 'Proteome' ~ 'lred',
R2m > 0.18 & R2m <= 0.21 & dataType == 'Proteome' ~ 'red',
R2m > 0.21 & R2m <= 0.24 & dataType == 'Proteome' ~ 'dred',
R2m > 0.24 & R2m <= 0.27 & dataType == 'Proteome' ~ 'vdred',
R2m > 0.27 & R2m <= 0.30 & dataType == 'Proteome' ~ 'vvdred',
#Genotype colors
R2m <= 0.15 & dataType == 'Genotype' ~ 'vvlblue',
R2m > 0.15 & R2m <= 0.18 & dataType == 'Genotype' ~ 'vlblue',
R2m > 0.18 & R2m <= 0.21 & dataType == 'Genotype' ~ 'lblue',
R2m > 0.21 & R2m <= 0.24 & dataType == 'Genotype' ~ 'blue',
R2m > 0.24 & R2m <= 0.27 & dataType == 'Genotype' ~ 'dblue',
R2m > 0.27 & R2m <= 0.30 & dataType == 'Genotype' ~ 'vdblue',
R2m > 0.30 & R2m <= 0.35 & dataType == 'Genotype' ~ 'vvdblue'
))%>%
ungroup()%>%
unite(color, c('colorBin', 'color'), sep = '')%>%
rownames_to_column(var = 'linkID')%>%
unite(column, c(linkID, name, linkStart, linkEnding, color), sep = ' ')%>%
select(column)
linkJoiner <- variableLinks%>%
bind_rows(responseLinks)%>%
as.matrix()
write_lines(linkJoiner, '~/Documents/GitHub/yuHCT/data/plots/circos/circoslinks.txt')
# CircosPlot -- text labels -----------------------------------------------
text <- circosBands%>%
separate(column, c('chr', 'name', 'network', 'network2', 'start', 'end', 'color'), sep = ' ')%>%
select(name, start, end, network, color)%>%
mutate(color = 'color=vvdgrey')%>%
unite(column, c(name, start, end, network, color), sep = ' ')%>%
as.matrix()
write_lines(text, '~/Documents/GitHub/yuHCT/data/plots/circos/text.txt')
# Cluster text for building cluster mapping
clusterText <- circosBands%>%
separate(column, c('chr', 'name', 'feature', 'network2', 'start', 'end', 'color'), sep = ' ')%>%
left_join(clusters, by = 'feature')%>%
select(name, start, end, cluster, color)%>%
mutate(color = 'color=vvdgrey')%>%
unite(column, c(name, start, end, cluster, color), sep = ' ')%>%
as.matrix()
write_lines(clusterText, '~/Documents/GitHub/yuHCT/data/plots/circos/clusterText.txt')
?pheatmap
rawPhenotype
# hc -- phenotype hc ------------------------------------------------------
hcPhenotype <- rawPhenotype%>%
select(iid, hct, hb, SpO2, sbp, dbp, glucose, insulin, iron, hvr)
hcPhenotype
# hc -- phenotype hc ------------------------------------------------------
hcPhenotype <- rawPhenotype%>%
select(iid, hct, hb, SpO2, sbp, dbp, glucose, insulin, iron, hvr)%>%
column_to_rownames(var = 'sampleName')%>%
pheatmap::pheatmap(fontsize_col = 3, fontsize_row = 8)
# hc -- phenotype hc ------------------------------------------------------
hcPhenotype <- rawPhenotype%>%
select(iid, hct, hb, SpO2, sbp, dbp, glucose, insulin, iron, hvr)%>%
column_to_rownames(var = 'iid')%>%
pheatmap::pheatmap(fontsize_col = 3, fontsize_row = 8)
pheatmap
?geom_tile
# hc -- phenotype hc ------------------------------------------------------
hcPhenotype <- rawPhenotype%>%
select(iid, hct, hb, SpO2, sbp, dbp, glucose, insulin, iron, hvr)%>%
column_to_rownames(var = 'iid')%>%
geom_raster()
# hc -- phenotype hc ------------------------------------------------------
hcIidOrder <- tibble(feature = hcMetab$tree_row[['labels']],
order =  hcMetab$tree_row[['order']])%>%
arrange(order)
hcIidOrder
# hc -- phenotype hc ------------------------------------------------------
hcIidOrder <- (tibble(feature = hcMetab$tree_row[['labels']],
order =  hcMetab$tree_row[['order']])%>%
arrange(order))$feature
hcIidOrder
hcPhenotype <- rawPhenotype%>%
select(iid, hct, hb, SpO2, sbp, dbp, glucose, insulin, iron, hvr)%>%
left_join(metabIIDs, by = 'iid')%>%
mutate(sampleName = as.factor(sampleName),
sampleName = fct_relevel(sampleName, hcIidOrder))
hcPhenotype <- rawPhenotype%>%
select(iid, hct, hb, SpO2, sbp, dbp, glucose, insulin, iron, hvr)%>%
left_join(metabIIDs, by = 'iid')%>%
mutate(sampleName = as.factor(sampleName),
sampleName = fct_relevel(sampleName, hcIidOrder))%>%
ggplot() +
geom_raster()
hcPhenotype <- rawPhenotype%>%
select(iid, hct, hb, SpO2, sbp, dbp, glucose, insulin, iron, hvr)%>%
pivot_longer(2:ncol(.), names_to = 'phenotype', values_to = 'values')%>%
left_join(metabIIDs, by = 'iid')%>%
mutate(sampleName = as.factor(sampleName),
sampleName = fct_relevel(sampleName, hcIidOrder))%>%
ggplot() +
geom_tile(aes(phenotype, sampleName, fill = values))
hcPhenotype
hcPhenotype <- rawPhenotype%>%
select(iid, hct, hb, SpO2, sbp, dbp, glucose, insulin, iron, hvr)%>%
pivot_longer(2:ncol(.), names_to = 'phenotype', values_to = 'values')%>%
left_join(metabIIDs, by = 'iid')%>%
mutate(sampleName = as.factor(sampleName),
sampleName = fct_relevel(sampleName, hcIidOrder),
zscore = zscore(values))%>%
ggplot() +
geom_tile(aes(phenotype, sampleName, fill = zscore))
hcPhenotype
hcPhenotype <- rawPhenotype%>%
select(iid, hct, hb, SpO2, sbp, dbp, glucose, insulin, iron, hvr)%>%
pivot_longer(2:ncol(.), names_to = 'phenotype', values_to = 'values')%>%
left_join(metabIIDs, by = 'iid')%>%
mutate(sampleName = as.factor(sampleName),
sampleName = fct_relevel(sampleName, hcIidOrder),
zscore = zscore(values))
hcPhenotype
View(hcPhenotype)
significantLmer
significantLmer%>% filter(dataType == 'genotype')
